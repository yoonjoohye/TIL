context api가 아닌 상태관리 라이브러리가 필요하다고 느낀 이유 - recoil이든, redux든 상태 관리가 필요하다.
1. context api는 상위 루트에 provider를 감싸서, 사용한다 따라서 컨텍스트 헬(?) 형태로 보여지게 된다. -> 헬 금지..
2. context안에서 상태 뿐만 아니라, 로직도 작성하기 때문에 상태와 로직 분기가 어렵다. -> 강제적으로 상태와 로직을 분기시킬 수 있도록 하여야 함. 
3. 불필요한 리렌더링이 발생한다. 
```
return {
  test:{
    a:'',
    b:''
  }
}
```
test.b를 바꾸면 test.b 뿐만 아니라 test.a를 참조하고 있는 모든 컴포넌트들이 리렌더링이 발생한다.


자바스크립트 엔진의 콜스택에는 원시타입(string, number, boolean)은 값 그대로 저장되지만, 참조타입(array, object)은 주소 값이 저장되는데, 이 주소에 해당하는 참조타입의 값은 힙에 저장된다.
(콜스택은 원시타입, 힙은 참조타입)

불변성을 해야하는 이유
리액트는 콜스택의 변경점을 얕은 비교로 상태를 변화한다. 
원시타입의 값이 바뀌면 콜스택에서 새로 만들어지지만, 참조타입은 콜스택에서 새로 만들어지지 않는다. 반면에 참조타입의 값이 변경되면 주소는 변경되지 않고, 값만 변경되기 때문에 리액트에서 콜스택의 변경점을 알기가 어렵다.
따라서 불변성을 유지해야 상태 감지에 빠르게 대처할 수 있다.
